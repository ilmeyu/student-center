<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ilme.student.mapper.SimsCollegeMapper">
  <resultMap id="BaseResultMap" type="com.ilem.domain.SimsCollege">
    <constructor>
      <idArg column="ID" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="NAME" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="SHORT_NAME" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="INTRO" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="PROFESSION_NUMBER" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="STUDENT_NUMBER" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="PRESIDENT" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="CREATED_BY" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="CREATED_TIME" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="UPDATED_BY" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="UPDATED_TIME" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, NAME, SHORT_NAME, INTRO, PROFESSION_NUMBER, STUDENT_NUMBER, PRESIDENT, CREATED_BY, 
    CREATED_TIME, UPDATED_BY, UPDATED_TIME
  </sql>
  <select id="selectByExample" parameterType="com.ilme.student.model.SimsCollegeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from SIMS_COLLEGE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from SIMS_COLLEGE
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from SIMS_COLLEGE
    where ID = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.ilme.student.model.SimsCollegeExample">
    delete from SIMS_COLLEGE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ilem.domain.SimsCollege">
    insert into SIMS_COLLEGE (ID, NAME, SHORT_NAME, 
      INTRO, PROFESSION_NUMBER, STUDENT_NUMBER, 
      PRESIDENT, CREATED_BY, CREATED_TIME, 
      UPDATED_BY, UPDATED_TIME)
    values (#{id,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{shortName,jdbcType=VARCHAR}, 
      #{intro,jdbcType=VARCHAR}, #{professionNumber,jdbcType=INTEGER}, #{studentNumber,jdbcType=INTEGER}, 
      #{president,jdbcType=VARCHAR}, #{createdBy,jdbcType=VARCHAR}, #{createdTime,jdbcType=TIMESTAMP}, 
      #{updatedBy,jdbcType=VARCHAR}, #{updatedTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.ilem.domain.SimsCollege">
    insert into SIMS_COLLEGE
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="name != null">
        NAME,
      </if>
      <if test="shortName != null">
        SHORT_NAME,
      </if>
      <if test="intro != null">
        INTRO,
      </if>
      <if test="professionNumber != null">
        PROFESSION_NUMBER,
      </if>
      <if test="studentNumber != null">
        STUDENT_NUMBER,
      </if>
      <if test="president != null">
        PRESIDENT,
      </if>
      <if test="createdBy != null">
        CREATED_BY,
      </if>
      <if test="createdTime != null">
        CREATED_TIME,
      </if>
      <if test="updatedBy != null">
        UPDATED_BY,
      </if>
      <if test="updatedTime != null">
        UPDATED_TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="shortName != null">
        #{shortName,jdbcType=VARCHAR},
      </if>
      <if test="intro != null">
        #{intro,jdbcType=VARCHAR},
      </if>
      <if test="professionNumber != null">
        #{professionNumber,jdbcType=INTEGER},
      </if>
      <if test="studentNumber != null">
        #{studentNumber,jdbcType=INTEGER},
      </if>
      <if test="president != null">
        #{president,jdbcType=VARCHAR},
      </if>
      <if test="createdBy != null">
        #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null">
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null">
        #{updatedBy,jdbcType=VARCHAR},
      </if>
      <if test="updatedTime != null">
        #{updatedTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ilme.student.model.SimsCollegeExample" resultType="java.lang.Long">
    select count(*) from SIMS_COLLEGE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update SIMS_COLLEGE
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        NAME = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.shortName != null">
        SHORT_NAME = #{record.shortName,jdbcType=VARCHAR},
      </if>
      <if test="record.intro != null">
        INTRO = #{record.intro,jdbcType=VARCHAR},
      </if>
      <if test="record.professionNumber != null">
        PROFESSION_NUMBER = #{record.professionNumber,jdbcType=INTEGER},
      </if>
      <if test="record.studentNumber != null">
        STUDENT_NUMBER = #{record.studentNumber,jdbcType=INTEGER},
      </if>
      <if test="record.president != null">
        PRESIDENT = #{record.president,jdbcType=VARCHAR},
      </if>
      <if test="record.createdBy != null">
        CREATED_BY = #{record.createdBy,jdbcType=VARCHAR},
      </if>
      <if test="record.createdTime != null">
        CREATED_TIME = #{record.createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedBy != null">
        UPDATED_BY = #{record.updatedBy,jdbcType=VARCHAR},
      </if>
      <if test="record.updatedTime != null">
        UPDATED_TIME = #{record.updatedTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update SIMS_COLLEGE
    set ID = #{record.id,jdbcType=VARCHAR},
      NAME = #{record.name,jdbcType=VARCHAR},
      SHORT_NAME = #{record.shortName,jdbcType=VARCHAR},
      INTRO = #{record.intro,jdbcType=VARCHAR},
      PROFESSION_NUMBER = #{record.professionNumber,jdbcType=INTEGER},
      STUDENT_NUMBER = #{record.studentNumber,jdbcType=INTEGER},
      PRESIDENT = #{record.president,jdbcType=VARCHAR},
      CREATED_BY = #{record.createdBy,jdbcType=VARCHAR},
      CREATED_TIME = #{record.createdTime,jdbcType=TIMESTAMP},
      UPDATED_BY = #{record.updatedBy,jdbcType=VARCHAR},
      UPDATED_TIME = #{record.updatedTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ilem.domain.SimsCollege">
    update SIMS_COLLEGE
    <set>
      <if test="name != null">
        NAME = #{name,jdbcType=VARCHAR},
      </if>
      <if test="shortName != null">
        SHORT_NAME = #{shortName,jdbcType=VARCHAR},
      </if>
      <if test="intro != null">
        INTRO = #{intro,jdbcType=VARCHAR},
      </if>
      <if test="professionNumber != null">
        PROFESSION_NUMBER = #{professionNumber,jdbcType=INTEGER},
      </if>
      <if test="studentNumber != null">
        STUDENT_NUMBER = #{studentNumber,jdbcType=INTEGER},
      </if>
      <if test="president != null">
        PRESIDENT = #{president,jdbcType=VARCHAR},
      </if>
      <if test="createdBy != null">
        CREATED_BY = #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null">
        CREATED_TIME = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null">
        UPDATED_BY = #{updatedBy,jdbcType=VARCHAR},
      </if>
      <if test="updatedTime != null">
        UPDATED_TIME = #{updatedTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ilem.domain.SimsCollege">
    update SIMS_COLLEGE
    set NAME = #{name,jdbcType=VARCHAR},
      SHORT_NAME = #{shortName,jdbcType=VARCHAR},
      INTRO = #{intro,jdbcType=VARCHAR},
      PROFESSION_NUMBER = #{professionNumber,jdbcType=INTEGER},
      STUDENT_NUMBER = #{studentNumber,jdbcType=INTEGER},
      PRESIDENT = #{president,jdbcType=VARCHAR},
      CREATED_BY = #{createdBy,jdbcType=VARCHAR},
      CREATED_TIME = #{createdTime,jdbcType=TIMESTAMP},
      UPDATED_BY = #{updatedBy,jdbcType=VARCHAR},
      UPDATED_TIME = #{updatedTime,jdbcType=TIMESTAMP}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
</mapper>